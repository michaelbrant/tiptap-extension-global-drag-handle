{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { Extension } from '@tiptap/core';\nimport {\n  NodeSelection,\n  Plugin,\n  PluginKey,\n  TextSelection,\n} from '@tiptap/pm/state';\nimport { Fragment, Slice, Node } from '@tiptap/pm/model';\n\n// @ts-ignore\nimport { __serializeForClipboard, EditorView } from '@tiptap/pm/view';\n\nexport interface GlobalDragHandleOptions {\n  /**\n   * The width of the drag handle\n   */\n  dragHandleWidth: number;\n\n  /**\n   * The treshold for scrolling\n   */\n  scrollTreshold: number;\n\n  /*\n   * The css selector to query for the drag handle. (eg: '.custom-handle').\n   * If handle element is found, that element will be used as drag handle. If not, a default handle will be created\n   */\n  dragHandleSelector?: string;\n\n  /**\n   * Tags to be excluded for drag handle\n   */\n  excludedTags: string[];\n}\nfunction absoluteRect(node: Element) {\n  const data = node.getBoundingClientRect();\n  const modal = node.closest('[role=\"dialog\"]');\n\n  if (modal && window.getComputedStyle(modal).transform !== 'none') {\n    const modalRect = modal.getBoundingClientRect();\n\n    return {\n      top: data.top - modalRect.top,\n      left: data.left - modalRect.left,\n      width: data.width,\n    };\n  }\n  return {\n    top: data.top,\n    left: data.left,\n    width: data.width,\n  };\n}\n\nfunction nodeDOMAtCoords(coords: { x: number; y: number }) {\n  return document\n    .elementsFromPoint(coords.x, coords.y)\n    .find(\n      (elem: Element) =>\n        elem.parentElement?.matches?.('.ProseMirror') ||\n        elem.matches(\n          [\n            'li',\n            'p:not(:first-child)',\n            'pre',\n            'blockquote',\n            'h1, h2, h3, h4, h5, h6',\n          ].join(', '),\n        ),\n    );\n}\n\nfunction nodePosAtDOM(\n  node: Element,\n  view: EditorView,\n  options: GlobalDragHandleOptions,\n) {\n  const boundingRect = node.getBoundingClientRect();\n\n  return view.posAtCoords({\n    left: boundingRect.left + 50 + options.dragHandleWidth,\n    top: boundingRect.top + 1,\n  })?.inside;\n}\n\nfunction calcNodePos(pos: number, view: EditorView) {\n  const $pos = view.state.doc.resolve(pos);\n  if ($pos.depth > 1) return $pos.before($pos.depth);\n  return pos;\n}\n\nexport function DragHandlePlugin(\n  options: GlobalDragHandleOptions & { pluginKey: string },\n) {\n  let listType = '';\n  function handleDragStart(event: DragEvent, view: EditorView) {\n    view.focus();\n\n    if (!event.dataTransfer) return;\n\n    const node = nodeDOMAtCoords({\n      x: event.clientX + 50 + options.dragHandleWidth,\n      y: event.clientY,\n    });\n\n    if (!(node instanceof Element)) return;\n\n    let draggedNodePos = nodePosAtDOM(node, view, options);\n    if (draggedNodePos == null || draggedNodePos < 0) return;\n    draggedNodePos = calcNodePos(draggedNodePos, view);\n\n    const { from, to } = view.state.selection;\n    const diff = from - to;\n\n    const fromSelectionPos = calcNodePos(from, view);\n    let differentNodeSelected = false;\n\n    const nodePos = view.state.doc.resolve(fromSelectionPos);\n\n    // Check if nodePos points to the top level node\n    if (nodePos.node().type.name === 'doc') differentNodeSelected = true;\n    else {\n      const nodeSelection = NodeSelection.create(\n        view.state.doc,\n        nodePos.before(),\n      );\n\n      // Check if the node where the drag event started is part of the current selection\n      differentNodeSelected = !(\n        draggedNodePos + 1 >= nodeSelection.$from.pos &&\n        draggedNodePos <= nodeSelection.$to.pos\n      );\n    }\n    let selection = view.state.selection;\n    if (\n      !differentNodeSelected &&\n      diff !== 0 &&\n      !(view.state.selection instanceof NodeSelection)\n    ) {\n      const endSelection = NodeSelection.create(view.state.doc, to - 1);\n      selection = TextSelection.create(\n        view.state.doc,\n        draggedNodePos,\n        endSelection.$to.pos,\n      );\n    } else {\n      selection = NodeSelection.create(view.state.doc, draggedNodePos);\n\n      // if inline node is selected, e.g mention -> go to the parent node to select the whole node\n      // if table row is selected, go to the parent node to select the whole node\n      if (\n        (selection as NodeSelection).node.type.isInline ||\n        (selection as NodeSelection).node.type.name === 'tableRow'\n      ) {\n        let $pos = view.state.doc.resolve(selection.from);\n        selection = NodeSelection.create(view.state.doc, $pos.before());\n      }\n    }\n    view.dispatch(view.state.tr.setSelection(selection));\n\n    // If the selected node is a list item, we need to save the type of the wrapping list e.g. OL or UL\n    if (\n      view.state.selection instanceof NodeSelection &&\n      view.state.selection.node.type.name === 'listItem'\n    ) {\n      listType = node.parentElement!.tagName;\n    }\n\n    const slice = view.state.selection.content();\n    const { dom, text } = __serializeForClipboard(view, slice);\n\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData('text/html', dom.innerHTML);\n    event.dataTransfer.setData('text/plain', text);\n    event.dataTransfer.effectAllowed = 'copyMove';\n\n    event.dataTransfer.setDragImage(node, 0, 0);\n\n    view.dragging = { slice, move: event.ctrlKey };\n  }\n\n  let dragHandleElement: HTMLElement | null = null;\n\n  function hideDragHandle() {\n    if (dragHandleElement) {\n      dragHandleElement.classList.add('hide');\n    }\n  }\n\n  function showDragHandle() {\n    if (dragHandleElement) {\n      dragHandleElement.classList.remove('hide');\n    }\n  }\n\n  function hideHandleOnEditorOut(event: MouseEvent) {\n    if (event.target instanceof Element) {\n      const isInsideEditor = !!event.target.closest('.tiptap.ProseMirror');\n      const isHandle =\n        !!!event.target.attributes.getNamedItem('data-drag-handle');\n      const relatedTarget = event.relatedTarget as Element;\n      // Check if the relatedTarget class is tiptap\n      const isTipTap =\n        relatedTarget?.classList.contains('tiptap') ||\n        relatedTarget?.classList.contains('drag-handle');\n      if (!isTipTap) {\n        hideDragHandle();\n        return;\n      }\n      if (isInsideEditor || isHandle) return;\n    }\n    hideDragHandle();\n  }\n\n  return new Plugin({\n    key: new PluginKey(options.pluginKey),\n    view: (view) => {\n      const handleBySelector = options.dragHandleSelector\n        ? document.querySelector<HTMLElement>(options.dragHandleSelector)\n        : null;\n      dragHandleElement = handleBySelector ?? document.createElement('div');\n      dragHandleElement.draggable = true;\n      dragHandleElement.dataset.dragHandle = '';\n      dragHandleElement.classList.add('drag-handle');\n\n      function onDragHandleDragStart(e: DragEvent) {\n        handleDragStart(e, view);\n      }\n\n      dragHandleElement.addEventListener('dragstart', onDragHandleDragStart);\n\n      function onDragHandleDrag(e: DragEvent) {\n        hideDragHandle();\n        let scrollY = window.scrollY;\n        if (e.clientY < options.scrollTreshold) {\n          window.scrollTo({ top: scrollY - 30, behavior: 'smooth' });\n        } else if (window.innerHeight - e.clientY < options.scrollTreshold) {\n          window.scrollTo({ top: scrollY + 30, behavior: 'smooth' });\n        }\n      }\n\n      dragHandleElement.addEventListener('drag', onDragHandleDrag);\n\n      hideDragHandle();\n\n      if (!handleBySelector) {\n        view?.dom?.parentElement?.appendChild(dragHandleElement);\n      }\n      view?.dom?.parentElement?.addEventListener(\n        'mouseout',\n        hideHandleOnEditorOut,\n      );\n\n      return {\n        destroy: () => {\n          if (!handleBySelector) {\n            dragHandleElement?.remove?.();\n          }\n          dragHandleElement?.removeEventListener('drag', onDragHandleDrag);\n          dragHandleElement?.removeEventListener(\n            'dragstart',\n            onDragHandleDragStart,\n          );\n          dragHandleElement = null;\n          view?.dom?.parentElement?.removeEventListener(\n            'mouseout',\n            hideHandleOnEditorOut,\n          );\n        },\n      };\n    },\n    props: {\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          if (!view.editable) {\n            return;\n          }\n\n          const node = nodeDOMAtCoords({\n            x: event.clientX + 50 + options.dragHandleWidth,\n            y: event.clientY,\n          });\n\n          const notDragging = node?.closest('.not-draggable');\n          const excludedTagList = options.excludedTags\n            .concat(['ol', 'ul'])\n            .join(', ');\n\n          if (\n            !(node instanceof Element) ||\n            node.matches(excludedTagList) ||\n            notDragging\n          ) {\n            hideDragHandle();\n            return;\n          }\n\n          const compStyle = window.getComputedStyle(node);\n          const parsedLineHeight = parseInt(compStyle.lineHeight, 10);\n          const lineHeight = isNaN(parsedLineHeight)\n            ? parseInt(compStyle.fontSize) * 1.2\n            : parsedLineHeight;\n          const paddingTop = parseInt(compStyle.paddingTop, 10);\n\n          const rect = absoluteRect(node);\n\n          rect.top += (lineHeight - 24) / 2;\n          rect.top += paddingTop;\n          // Li markers\n          if (node.matches('ul:not([data-type=taskList]) li, ol li')) {\n            rect.left -= options.dragHandleWidth;\n          }\n          rect.width = options.dragHandleWidth;\n\n          if (!dragHandleElement) return;\n\n          dragHandleElement.style.left = `${rect.left - rect.width}px`;\n          dragHandleElement.style.top = `${rect.top}px`;\n          showDragHandle();\n        },\n        keydown: () => {\n          hideDragHandle();\n        },\n        mousewheel: () => {\n          hideDragHandle();\n        },\n        // dragging class is used for CSS\n        dragstart: (view) => {\n          view.dom.classList.add('dragging');\n        },\n        drop: (view, event) => {\n          view.dom.classList.remove('dragging');\n          hideDragHandle();\n          let droppedNode: Node | null = null;\n          const dropPos = view.posAtCoords({\n            left: event.clientX,\n            top: event.clientY,\n          });\n\n          if (!dropPos) return;\n\n          if (view.state.selection instanceof NodeSelection) {\n            droppedNode = view.state.selection.node;\n          }\n          if (!droppedNode) return;\n\n          const resolvedPos = view.state.doc.resolve(dropPos.pos);\n\n          const isDroppedInsideList =\n            resolvedPos.parent.type.name === 'listItem';\n\n          // If the selected node is a list item and is not dropped inside a list, we need to wrap it inside <ol> tag otherwise ol list items will be transformed into ul list item when dropped\n          if (\n            view.state.selection instanceof NodeSelection &&\n            view.state.selection.node.type.name === 'listItem' &&\n            !isDroppedInsideList &&\n            listType == 'OL'\n          ) {\n            const newList = view.state.schema.nodes.orderedList?.createAndFill(\n              null,\n              droppedNode,\n            );\n            const slice = new Slice(Fragment.from(newList), 0, 0);\n            view.dragging = { slice, move: event.ctrlKey };\n          }\n        },\n        dragend: (view) => {\n          view.dom.classList.remove('dragging');\n        },\n      },\n    },\n  });\n}\n\nconst GlobalDragHandle = Extension.create({\n  name: 'globalDragHandle',\n\n  addOptions() {\n    return {\n      dragHandleWidth: 20,\n      scrollTreshold: 100,\n      excludedTags: [],\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      DragHandlePlugin({\n        pluginKey: 'globalDragHandle',\n        dragHandleWidth: this.options.dragHandleWidth,\n        scrollTreshold: this.options.scrollTreshold,\n        dragHandleSelector: this.options.dragHandleSelector,\n        excludedTags: this.options.excludedTags,\n      }),\n    ];\n  },\n});\n\nexport default GlobalDragHandle;\n"],"names":["view","NodeSelection","TextSelection","__serializeForClipboard","Plugin","PluginKey","Slice","Fragment","Extension"],"mappings":"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"}